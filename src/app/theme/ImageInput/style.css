.image-input {
  display: flex;
  flex-direction: column-reverse;
  position: relative;
  margin-top: 1.5rem;
}

.image-input label {
  pointer-events: none;
  position: absolute;
  top: 0;
  right: auto;
  bottom: auto;
  left: 0;
  z-index: 2;
  padding: 0.5rem 1rem;
  transition: transform 150ms;
  transform-origin: left;
  transform: translate(0, 0) scale(1);
}
.image-input label::after {
  margin-left: 0.5em;
}
.image-input .border {
  pointer-events: none;
  display: block;
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  background: transparent;
  border-radius: 0.25rem;
  z-index: 0;
  box-sizing: content-box;
  padding: 1px;
  margin: -1px;
  transition: transform 100ms;
  transform: scaleX(0);
}
.image-input .hint {
  position: absolute;
  top: 100%;
  right: 0;
  bottom: 0;
  left: 0;
  margin: 0.25em;
  font-size: 0.8em;
  opacity: 0.5;
}
.image-input input {
  cursor: pointer;
  border-radius: 0.25rem;
  width: 100%;
}
.image-input input ~ .picker {
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  z-index: 1;
  pointer-events: none;
  padding: 0.5rem 1rem;
  color: #555555;
  background-color: #f8faff;
  background-image: none;
  border: 1px solid #eef0f7;
  border-radius: 0.25rem;
  box-shadow: inset 0 1px 1px rgba(0,0,0,0.075);
  transition: border-color ease-in-out 0.15s, box-shadow ease-in-out 0.15s;
}
.image-input input:required ~ label:after {
  content: "*";
}

.image-input input[invalid] {
  background: #fcf1f4;
}
.image-input input[invalid] ~ label {
  color: var(--error-color);
  pointer-events: all;
  transform: translate(-0.5em, -85%) scale(0.66);
}
.image-input input[invalid] ~ label:after {
  content: "✗";
}

.image-input input[invalid] ~ .border {
  background-color: var(--error-color);
  transform: scaleX(1);
}
.image-input input[invalid] ~ .error {
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  z-index: 1;
  pointer-events: none;
  padding: 0.5rem 1rem;
  color: #555555;
}


.preview {
  display: flex;
  align-items: center;
  justify-content: space-around;

  padding: 1.5rem;
  border-radius: 0.25em;
  background-color: #f1fcf6;
  border: 1px solid var(--success-color);
  color: var(--success-color);
  box-shadow: inset 0 1px 1px rgba(0,0,0,0.075);
}

.preview .shadow {
  background-color: var(--background-color);
  border-radius: 0.25em;
  box-shadow: 0 8px 25px 0 rgba(62,57,107,.1), 0 2px 8px 0 rgba(62,57,107,.12);
  overflow: hidden;
  position: relative;
}

.preview .original {
  display: flex;
  align-items: center;
}
.preview .original .img {
  max-width: 6rem;
}
.preview .original .info {
  padding-left: 1rem;
}
.preview .original .name {
  display: flex;
  align-items: center;
}
.preview .original .name b {
  overflow: hidden;
  white-space: nowrap;
  text-overflow: ellipsis;
  max-width: 9rem;
}
.preview .original .name a {
  color: inherit;
}
.preview .original .name svg {
  margin-left: 0.5rem;
}

.preview .arrow {
  margin: 0 1rem;
}
.preview .thumbnail {
  position: relative;
  max-width: 6rem;
  width: 100%;
}
.preview .thumbnail::after {
  content: "";
  display: block;
  padding-top: 66.66%;
}
.preview .thumbnailimg {
  width: 100%;
  height: 100%;
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  object-fit: cover;
}

.preview .thumbnail ~ label {
  color: var(--success-color);
  pointer-events: all;
  transform: translate(-0.5em, -85%) scale(0.66);
}

.preview .thumbnail ~ label:after {
  content: "✓";
}

